#!/bin/bash

# Beautify my 'aptitude update && aptitude -s -y safe-upgrade' output
# Optimized for aptitude 0.6.3 

RED='\e[0;31m'
GREEN='\e[0;32m'
YELLOW='\e[0;33m'
RESET='\e[0m'

cecho() {
	if [ -t 1 ]; then
		# Only use colors when file descriptor FD is open and refers to a terminal.
		echo -n -e "$2$1"
	else
		if [ "$2" == $RESET ] ; then
			echo -n -e "$1"
		else
			echo -n "$1"
		fi
	fi
}

source animation.sh
trap stopAnimation EXIT

printf "%-38s" "Updating package list..."
startAnimation
if (aptitude update > /dev/null 2>&1); then
	stopAnimation
	echo -n "[ "
	cecho "Done" $GREEN
	cecho " ]\n" $RESET
else
	stopAnimation
	echo -n "[ "
	cecho "FAILED" $RED
	cecho " ]\n" $RESET
	exit 1
fi

UPDATES=1
UPGRADE=$(aptitude -q -s -y safe-upgrade 2>&1)
x=0
while read LINE; do
	if [ ! "$LINE" == "" ]; then
		if [[ $x -gt 5 ]]; then
			if [[ "$LINE" =~ '0 packages upgraded' ]]; then
				cecho "" $RESET
			else
				[[ "$LINE" =~ 'packages upgraded,' ]] && cecho "\n" $RESET
			fi
			echo "$LINE"
			[ $x -eq 6 ] && let x++ && cecho "" $YELLOW && echo
		else
			LINE=$(echo $LINE | tr -d '\n')
			let x++
			printf "%-38s" "$LINE"
			echo -n "[ "
	                cecho "Done" $GREEN
			cecho " ]\n" $RESET
			[ $x -eq 6 ] && echo
		fi		
	fi
	if [ "$LINE" == "0 packages upgraded, 0 newly installed, 0 to remove and 0 not upgraded." ]; then
		UPDATES=0
	fi
done <<< "$UPGRADE" # not using "aptitude.... | while read LINE", because subshell is started and var UPDATE could not be altered

echo
if [ $UPDATES == 1 ]; then
	apt list --upgradable 2>/dev/null
	echo
fi
